As with the primary installation instructions, Dev notebook 0, this was done on Ubuntu 18.04 LTS.

1) copy your rules.v4 and rules.v6 files into your users home directory so you have the old rule to reference when creating the new ones.

2) I never liked the CLI syntax for managing Iptables, and I don't like the CLI syntax for managing nftables, so as usual, I will post a cat of my Iptables rules and my nftables rules.
I find editting the configuration files directly is easier than trying to convert the iptables to nftables, and/or import them, etc.
Note:  I've added the ipv6 rules in the same chain as the ipv4 rules.
You can separate them by using 'table ip filter' for your input, forward and output ipv4 chain rules, and table ip6 filter for it's chain, and then a 'table NAT' for your NATs,
but I chose to use 'table inet filer' and include both the ipv4 and ipv6 rules in the same chains. I don't have any NATs on this OpenNMS installation.

3) Let's purge iptables and clean up the leftovers.
sudo apt-get purge iptables-dev iptables netfiler-persistent && sudo apt-get autoremove -y

4) Now let's install nftables and all dependencies.
sudo apt-get install nftables*

5) View your copied rules.v4 and rules.v5 I've catted the before and after of my OpenNMS dev box below.

----- Old iptables cat. (I removed the [0:0] from the INPUT, FORWARD and OUTPUT as it's an automated counter)
Don't use eno1. Use your own interface. Find it by typing CLI command:  ifconfig -a
Don't use 192.168.1.0/24. Use your own network. Find it by typing same CLI command as above.




opennms@opennms:~$ cat ip4tables-save.txt 
# Generated by iptables-save v1.6.1 on Thu Feb 27 01:09:49 2020
*filter
:INPUT DROP
:FORWARD ACCEPT
:OUTPUT ACCEPT
-A INPUT -s 192.168.1.0/24 -i eno1 -p tcp -m tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp -m tcp --dport 8980 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 3000 -j ACCEPT
-A INPUT -p udp -m udp --dport 161 -j ACCEPT
-A INPUT -p udp -m udp --dport 162 -j ACCEPT
-A INPUT -p udp -m udp --dport 514 -j ACCEPT
-A INPUT -s 127.0.0.1/32 -p tcp -m tcp --dport 9200 -j ACCEPT
-A INPUT -s 127.0.0.1/32 -p tcp -m tcp --dport 5432 -j ACCEPT
-A INPUT -s 127.0.0.1/32 -p udp -m udp --dport 10514 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 21 -j DROP
-A INPUT -p tcp -m tcp --dport 25 -j DROP
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o eno1 -p tcp -m tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT




----- New nftables cat. (I also removed the counters so you can see what the configuration is.)
You will see that I added the equivalent ipv6 rules where I needed them in the all inclusive 'table inet filter'.
I haven't restricted my ssh port (tcp/22) here as in the above rule. I'll leave that up to your discretion for your server.

nms@opennms:/etc$ sudo cat nftables.conf 
#!/usr/sbin/nft -f

flush ruleset

table inet filter {
	chain input {
		type filter hook input priority 0; policy drop;
                ct state { established, related } counter accept
		tcp dport { 22 } counter accept
		tcp dport { 8980 } counter accept
		tcp dport { 3000 } counter accept
		tcp dport { 9200 } counter accept
		tcp dport { 514 } counter accept
		udp dport { 514 } counter accept
		udp dport { 161 } counter accept
		udp dport { 162 } counter accept
		ip saddr 127.0.0.1 tcp dport { 5432 } counter accept
		ip6 saddr ::1 tcp dport { 5432 } counter accept
		ip saddr 127.0.0.1 tcp dport { 10514 } counter accept
		ip6 saddr ::1 tcp dport { 10514 } counter accept
		ip saddr 127.0.0.1 tcp dport { 9200 } counter accept
		ip6 saddr ::1 tcp dport { 9200 } counter accept
		iif "lo" accept
	}
	chain forward {
		type filter hook forward priority 0; policy accept;
	}
	chain output {
		type filter hook output priority 0; policy accept;
		oif "lo" accept
	}
}


6) Now that the rules are in place, start services, and enable for boot
sudo systemctl start nftables
sudo systemctl enable nftables

7) If you have any errors in your syntax, the service will not start.
Type this and start debugging your errors.
sudo journalctl -xe

8) In closing I recommend you migrate to nftables from iptables.
Iptables is still supported, but it is legacy and will eventually be deprecated and at some point or another, no longer supported.

9) Here are some helpful websites I found in regards to nftables.
https://linuxnewbieguide.org/hello-nftables-goodbye-iptables/     // first mention of change as of Debian 9, and has picture of netfilter team!
https://linux-audit.com/nftables-beginners-guide-to-traffic-filtering/        // Awesome overview
https://wiki.gentoo.org/wiki/Nftables/Examples       // Just note the syntax used in the configuration files' ruleset, not the actual directory tree structure.
